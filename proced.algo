FUNCTION dot_prod() : INTEGER
VAR
    i : INTEGER;
    n : INTEGER;
    v1 : ARRAY_OF INTEGER;
    v2 : ARRAY_OF INTEGER;
    ps : INTEGER:= 0;

BEGIN
    FOR i FROM 0 TO n STEP 1  DO
        ps := ps + v1[i] * v2[i];
    END_FOR
    RETURN ps ;
END





PROCEDURE dot_product(n :INTEGER, VAR v1: ARRAY_OF INTEGER, VAR v2: ARRAY_OF INTEGER)
VAR
    i : INTEGER;
    ps : INTEGER := 0;
    
BEGIN
    FOR i FROM 0 TO n STEP 1  DO
        read(v1[i]);
        read(v2[i]);
        ps := ps + v1[i] * v2[i];
        read(ps);
    END_FOR
END





ALGORITHM algorithm_product
VAR
    i,n: INTEGER;
    v1 : ARRAY_OF INTEGER[n];
    v2 : ARRAY_OF INTEGER[n];
    orthogonal : BOOLEAN;
BEGIN
  dot_product(n,v1,v2);
  ps := dot_prod();
  IF (ps == 0) THEN
      orthogonal := true;
  ELSE
      orthogonal := false;
  END_IF
END